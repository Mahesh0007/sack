producerRaw {
  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA}
  acks = "all"
  key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  value.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  schema.registry.url = "http://localhost:8081"
  zookeeper.connect = "localhost:2181"
}

producerAvro {
  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA}
  acks = "all"
  key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  value.serializer = "io.confluent.kafka.serializers.KafkaAvroSerializer"
  schema.registry.url = "http://localhost:8081"
  zookeeper.connect = "localhost:2181"
}

producerBinary {
  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA}
  acks = "all"
  key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  value.serializer = "org.apache.kafka.common.serialization.ByteArraySerializer"
  schema.registry.url = "http://localhost:8081"
  zookeeper.connect = "localhost:2181"
}

consumerRaw {
  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA}
  zookeeper.connect = "localhost:2181"
  group.id = "csv-raw-consumer"
  enable.auto.commit = false
  auto.offset.reset = "earliest"
  max.partition.fetch.bytes = "1048576"
  schedule.interval = 1000
  unconfirmed.timeout = 3000
  schema.registry.url = "http://localhost:8081"
}

consumerAvro {
  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA}
  zookeeper.connect = "localhost:2181"
  group.id = "csv-avro-consumer"
  enable.auto.commit = false
  auto.offset.reset = "earliest"
  max.partition.fetch.bytes = "1048576"
  schedule.interval = 1000
  unconfirmed.timeout = 3000
  schema.registry.url = "http://localhost:8081"
}

consumerBinary {
  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA}
  zookeeper.connect = "localhost:2181"
  group.id = "csv-binary-consumer"
  enable.auto.commit = false
  auto.offset.reset = "earliest"
  max.partition.fetch.bytes = "1048576"
  schedule.interval = 1000
  unconfirmed.timeout = 3000
  schema.registry.url = "http://localhost:8081"
}

akka {
  loglevel = "DEBUG"
}
